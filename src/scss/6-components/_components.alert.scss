// ==========================================================================
// Notification
// ==========================================================================

// Here we set a variable assuming that default and module settings
// are not set globally. If they have been previously been defined,
// the following variable will be overriden and will be set to `true`.
$imported-global-settings: false !default;

@if ($imported-global-settings == false) {
  @warn "Oops! Have you included global settings files?";
}

// Setup variables
$alert-border-radius: $global-border-radius !default;
$alert-border-width:  1px !default;
$alert-border-color:  $color-yellow--superdark !default;
$alert-bg:            $color-yellow--superlight !default;
$alert-color:         $color-yellow--superdark !default;
$alert-close-color:   $color-black !default;

.c-alert {
  position: relative;
  display: block;
  padding: rem-calc($global-spacing-unit--small);

  background-color: $alert-bg;
  color: $alert-color;

  border: $alert-border-width solid $alert-border-color;
  border-radius: $alert-border-radius;

  transition: opacity .3s ease-out;

  > :last-child {
    margin-bottom: 0;
  }

  &.is-hiding {
    opacity: 0;
  }
}

.c-alert__close {
  position: absolute;
  z-index: z("default");
  top: rem-calc($global-spacing-unit--tiny);
  right: rem-calc($global-spacing-unit--tiny);

  display: block;
  padding: 0;
  margin: 0;
  line-height: 1;
  color: rgba($alert-close-color, .4);
  font-size: rem-calc(18);
  cursor: pointer;

  border: 0;
  background: none;
  outline: 0;
  appearance: none;
  -webkit-appearance: none;
}


//
// Alert's animation state
// ==========================================================================

// .alert-enter {

// }

.alert-enter-active {
  animation-duration: 1s;
  animation-fill-mode: both;
  animation-name: shake;
}

// .alert-enter-to {
//   opacity: 0;
// }

// .alert-leave {

// }

.alert-leave-active {
  animation-duration: 1s;
  animation-fill-mode: both;
  animation-name: bounceOutUp;
}

// .alert-leave-to {
//   transform: translateX(10px);
//   opacity: 0;
// }

@keyframes shake {
  from,
  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }

  10%, 30%, 50%, 70%, 90% {
    -webkit-transform: translate3d(-10px, 0, 0);
    transform: translate3d(-10px, 0, 0);
  }

  20%, 40%, 60%, 80% {
    -webkit-transform: translate3d(10px, 0, 0);
    transform: translate3d(10px, 0, 0);
  }
}


@keyframes bounceOutUp {
  20% {
    -webkit-transform: translate3d(0, -10px, 0);
    transform: translate3d(0, -10px, 0);
  }

  40%, 45% {
    opacity: 1;
    -webkit-transform: translate3d(0, 20px, 0);
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 0;
    -webkit-transform: translate3d(0, -2000px, 0);
    transform: translate3d(0, -2000px, 0);
  }
}
